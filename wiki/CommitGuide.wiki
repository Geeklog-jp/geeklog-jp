#summary プロジェクト・メンバーのためのコミットガイド
#labels Phase-Implementation

= プロジェクト・メンバーのためのコミットガイド =

本ドキュメントはプロジェクト・メンバーがコードをコミットするにあたっての手引きです。
(完成版ではありません。)

-----

== コミットする前に ==

予め、以下のことを行っておいてください。

* [SettingSubVersion]に従って、Subversionの設定を行ってください。(必須)
* [MailingList]に従って、変更の結果をメールで受けるようにしてください。(推奨)

-----

== コミット時の約束 ==

 # コミットは原則として開発版を置く trunk に対して行います。
 # branches 以下には安定版のためのブランチと、特定の開発目的のブランチがあります。
    * 安定版は他の開発者に一声掛けてから、動作が確認されているものをコミットします。
    * 特定の開発目的のブランチは、そのブランチで開発を行っている方が原則としてコミットします。
 # *コミットする前に、{{{svn update}}}で作業エリアを更新してください。*
     これでコミットしようとする内容を改めて確認できます。
 # *必ず、わかりやすいコミットのログを書いてください。*  コミットのログは100行くらいまで、長くなっても構いません。
 # 新しいファイルを追加するときは、そのファイル名に気をつけましょう。例えば、以下のような名前やパターンにマッチするファイルは使用を避けるべきです。
{{{
    RCS     SCCS    CVS     CVS.adm
    RCSLOG  cvslog.*
    tags    TAGS
    .make.state     .nse_depinfo
    *~      #*      .#*     ,*      _$*     *$
    *.old   *.bak   *.BAK   *.orig  *.rej   .del-*
    *.a     *.olb   *.o     *.obj   *.so    *.exe
    *.Z     *.elc   *.ln  
    core    *.core
}}}
 # 本体を直接ハックした場合は、IssueでMaintainabilityのラベルを付加して、将来バージョンアップするときの作業の目安としましょう。
 # 一通りの変更の後で、変更箇所のまとめを CHANGES.jp に記述しましょう。
-----

== こんなときどうする? ==

 * コミットのログに何を書くか?

    コードに行った修正の内容をわかりやすく書きます。

 * コードにも変更点を書くべきですか?

    何か新しい処理を加えたような場合は、それを説明するコメントを記述すべきです。

    一方、過去のコードをコメントで残すとか、変更内容をコメントに記述する必要はありません。
    過去のコードは古いリビジョンと比較すればわかりますし、その際に余計な部分が少ないほど差分を比較したり、パッチとして本家に提供するときも適切な内容になります。

    また、変更内容はコミットのログに書くべきもので、コードそのものに記録を残すものではありません。

 * 間違ってファイルを削除してしまいました。

   コミット前の場合はrevert(元に戻す)処理を行うことで回復できます。コミットしてしまった場合は、単純に削除したファイルを追加するのではなく、削除する前のリビジョンを*Subversionのリポジトリ上でコピー*してください。TortoiseSVNの場合は、リポジトリ・ブラウザ内でコピー作業を行う良いでしょう。

 * コミットのログを空のままコミット、またはログに誤りがありました。

   コミットのログは、対象のリビジョンに対するsvn:prop属性として保存されています。そこで、以下のようにリビジョンに対するsvn:prop属性を修正することで修正できます。

{{{
% svn propset --revprop -r <revision> svn:log "新しいコミット・ログ"
}}}

   または、新しいコミットのログをファイルに格納しておいて、以下のように実行することもできます。

{{{
% svn propset --revprop -r <revision> -F <コミット・ログを入れたファイル> svn:log
}}}

   いずれの場合も以前のコミットのログは単純に置き換えられて失われますので、svn log を実行する等して、以前のログを保存しておくと良いでしょう。